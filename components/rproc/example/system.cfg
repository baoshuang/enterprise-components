export = libPath, dllPath, logDest, logPath, logRotate, logLevel, eventPath
#---------------------------------- paths ------------------------------------#
etcPath = ${EC_SYS_PATH}/bin/ec/components/rproc/example/
binPath = ${EC_SYS_PATH}/bin/ec/components/${EC_COMPONENT_PKG}
libPath = ${EC_SYS_PATH}/bin/ec/components/${EC_COMPONENT_PKG}, ${EC_SYS_PATH}/bin/ec/libraries/
dllPath = ${EC_SYS_PATH}/bin/ec/components/${EC_COMPONENT_PKG}, ${EC_SYS_PATH}/bin/ec/libraries/
dataPath =  ${EC_SYS_PATH}/data/test/rprocExample/${EC_COMPONENT_ID}
logPath =   ${EC_SYS_PATH}/log/test/rprocExample/${EC_COMPONENT_ID}
eventPath = ${EC_SYS_PATH}/data/test/rprocExample/shared/events/
#---------------------------------- process ----------------------------------#
basePort = 18010
startWait = 1
stopWait = 1
cpuAffinity = 0
#---------------------------------- logging ----------------------------------#
logLevel = INFO
logDest = FILE,STDERR
logRotate = 01:00:00
#---------------------------------- housekeeping -----------------------------#
housekeeping = ()
#---------------------------------- components -------------------------------#
[group:t]
  [[t.gen]]
    command = "q gen.q"
    type = q:mock/gen
    port = ${basePort} + 3
    memCap = 10000
	cfg.dst = t.tick

  [[t.tick]]
    command = "q tickHF.q"
    type = q:tickHF/tickHF
    port = ${basePort} + 2
    memCap = 10000

  [[t.hdb]]
    command = "q hdb.q"
    type = q:hdb/hdb
    port = ${basePort} + 4
    memCap = 10000

  [[t.snap]]
    command = "q rproc.q"
    type = q:rproc/rproc
    port = ${basePort} + 7
    memCap = 10000
	requires = t.hdb, t.tick
	libs = snap

  [[t.mrvs]]
    command = "q rproc.q"
    type = q:rproc/rproc
    port = ${basePort} + 6
    memCap = 10000
	requires = t.hdb, t.tick
	libs = mrvs
	cfg.serverAux = t.hdb
	
  [[t.ohlc]]
    command = "q rproc.q"
    type = q:rproc/rproc
    port = ${basePort} + 1
    memCap = 10000
	requires = t.hdb, t.tick
	libs = ohlc
	cfg.serverAux = t.hdb

  [[t.snapX]]
    command = "q rproc.q"
    type = q:rproc/rproc
    port = ${basePort} + 8
    memCap = 10000
	requires = t.hdb, t.tick
	libs = snapX
	cfg.serverAux = t.hdb    
    
#-----------------------------------------------------------------------------#